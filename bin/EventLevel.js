"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class EventLevel {
    constructor() {
        this.receivers = [];
        this.children = new Map();
    }
    addReceiver(levelNameArray, receiver) {
        if (levelNameArray.length === 0)
            this.receivers.push(receiver);
        else {
            var currentName = levelNameArray.shift();
            if (!this.children.has(currentName))
                this.children.set(currentName, new EventLevel());
            this.children.get(currentName).addReceiver(levelNameArray, receiver);
        }
    }
    removeReceiver(levelNameArray) {
        if (levelNameArray.length === 0) {
            this.receivers = [];
            this.children.clear();
        }
        else {
            var currentName = levelNameArray.shift();
            if (this.children.has(currentName))
                this.children.get(currentName).removeReceiver(levelNameArray);
        }
    }
    trigger(levelNameArray, data, _this, __originalLevelName) {
        if (__originalLevelName === undefined)
            __originalLevelName = Array.from(levelNameArray);
        if (levelNameArray.length === 0) {
            this.receivers.forEach(function (item) {
                item.call(_this, data, __originalLevelName);
            });
            this.children.forEach(function (child) {
                child.trigger(levelNameArray, data, _this, __originalLevelName);
            });
        }
        else {
            var currentName = levelNameArray.shift();
            if (this.children.has(currentName))
                this.children.get(currentName).trigger(levelNameArray, data, _this, __originalLevelName);
        }
    }
    ;
}
exports.default = EventLevel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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anMiLCJzb3VyY2VzQ29udGVudCI6WyIvL+S6i+S7tuWQjeensOexu+Wei1xyXG5leHBvcnQgdHlwZSBldmVudG5hbWUgPSBzdHJpbmcgfCBudW1iZXI7XHJcblxyXG4vKipcclxuICog5LqL5Lu2562J57qn57G7XHJcbiAqIEBjb25zdHJ1Y3RvclxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnRMZXZlbCB7XHJcbiAgICBcclxuICAgIHJlY2VpdmVyczogRnVuY3Rpb25bXSA9IFtdOyAvL+W9k+WJjeWxgue6p+eahOaOpeaUtuWZqFxyXG4gICAgY2hpbGRyZW4gPSBuZXcgTWFwPGV2ZW50bmFtZSwgRXZlbnRMZXZlbD4oKTsgICAvL+WtkOWxgue6p1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5re75Yqg5o6l5pS25ZmoXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7ZXZlbnRuYW1lW119IGxldmVsTmFtZUFycmF5IOS6i+S7tuetiee6p+WQjeWtl+aVsOe7hFxyXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gcmVjZWl2ZXIg55uR5ZCs5ZmoXHJcbiAgICAgKiBcclxuICAgICAqIEBtZW1iZXJvZiBFdmVudExldmVsXHJcbiAgICAgKi9cclxuICAgIGFkZFJlY2VpdmVyKGxldmVsTmFtZUFycmF5OiBldmVudG5hbWVbXSwgcmVjZWl2ZXI6IEZ1bmN0aW9uKSB7ICAvL+a3u+WKoOaWsOeahOebkeWQrOWZqFxyXG4gICAgICAgIGlmIChsZXZlbE5hbWVBcnJheS5sZW5ndGggPT09IDApICAvL+aYr+S4jeaYr+acgOWQjuS4gOe6p+S6hlxyXG4gICAgICAgICAgICB0aGlzLnJlY2VpdmVycy5wdXNoKHJlY2VpdmVyKTtcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnROYW1lID0gbGV2ZWxOYW1lQXJyYXkuc2hpZnQoKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmNoaWxkcmVuLmhhcyhjdXJyZW50TmFtZSkpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNoaWxkcmVuLnNldChjdXJyZW50TmFtZSwgbmV3IEV2ZW50TGV2ZWwoKSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLmdldChjdXJyZW50TmFtZSkuYWRkUmVjZWl2ZXIobGV2ZWxOYW1lQXJyYXksIHJlY2VpdmVyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnp7vpmaTmjIflrprnrYnnuqfnmoTkuovku7bnm5HlkKzlmahcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtldmVudG5hbWVbXX0gbGV2ZWxOYW1lQXJyYXkg562J57qn5ZCN5a2X5pWw57uEXHJcbiAgICAgKiBcclxuICAgICAqIEBtZW1iZXJvZiBFdmVudExldmVsXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZVJlY2VpdmVyKGxldmVsTmFtZUFycmF5OiBldmVudG5hbWVbXSkge1xyXG5cclxuICAgICAgICBpZiAobGV2ZWxOYW1lQXJyYXkubGVuZ3RoID09PSAwKSB7IC8v5piv5LiN5piv5pyA5ZCO5LiA57qn5LqGXHJcbiAgICAgICAgICAgIHRoaXMucmVjZWl2ZXJzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4uY2xlYXIoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudE5hbWUgPSBsZXZlbE5hbWVBcnJheS5zaGlmdCgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuY2hpbGRyZW4uaGFzKGN1cnJlbnROYW1lKSlcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4uZ2V0KGN1cnJlbnROYW1lKS5yZW1vdmVSZWNlaXZlcihsZXZlbE5hbWVBcnJheSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6Kem5Y+R5omA5pyJ5oyH5a6a57qn5Yir5Lul5Y+K5a2Q57qn55qE55uR5ZCs5ZmoXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7ZXZlbnRuYW1lW119IGxldmVsTmFtZUFycmF5IOetiee6p+WQjeWtl+aVsOe7hFxyXG4gICAgICogQHBhcmFtIHsqfSBkYXRhIOimgee7meinpuWPkeeahOaWueazleS8oOmAkueahOaVsOaNrlxyXG4gICAgICogQHBhcmFtIHtPYmplY3R9IF90aGlzIOaMh+WumuebkeWQrOWZqOe7keWumueahHRoaXPlr7nosaFcclxuICAgICAqIEBwYXJhbSB7ZXZlbnRuYW1lW119IF9fb3JpZ2luYWxMZXZlbE5hbWUg5YaF6YOo5L2/55So55qE77yM5L+d55WZ5LiA5Liq5Y6f5aeL55qEbGV2ZWxOYW1lXHJcbiAgICAgKiBcclxuICAgICAqIEBtZW1iZXJvZiBFdmVudExldmVsXHJcbiAgICAgKi9cclxuICAgIHRyaWdnZXIobGV2ZWxOYW1lQXJyYXk6IGV2ZW50bmFtZVtdLCBkYXRhOiBhbnksIF90aGlzOiBPYmplY3QsIF9fb3JpZ2luYWxMZXZlbE5hbWU/OiBldmVudG5hbWVbXSkge1xyXG5cclxuICAgICAgICBpZiAoX19vcmlnaW5hbExldmVsTmFtZSA9PT0gdW5kZWZpbmVkKSAgLy/kv53nlZnkuIDkuKrljp/lp4vnmoRsZXZlbE5hbWVcclxuICAgICAgICAgICAgX19vcmlnaW5hbExldmVsTmFtZSA9IEFycmF5LmZyb20obGV2ZWxOYW1lQXJyYXkpO1xyXG5cclxuICAgICAgICBpZiAobGV2ZWxOYW1lQXJyYXkubGVuZ3RoID09PSAwKSB7ICAvL+aYr+S4jeaYr+acgOWQjuS4gOe6p+S6hizpgY3ljoblvZPliY3nuqfliKvlkozlrZDnuqdcclxuICAgICAgICAgICAgdGhpcy5yZWNlaXZlcnMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgaXRlbS5jYWxsKF90aGlzLCBkYXRhLCBfX29yaWdpbmFsTGV2ZWxOYW1lKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICBjaGlsZC50cmlnZ2VyKGxldmVsTmFtZUFycmF5LCBkYXRhLCBfdGhpcywgX19vcmlnaW5hbExldmVsTmFtZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBjdXJyZW50TmFtZSA9IGxldmVsTmFtZUFycmF5LnNoaWZ0KCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5jaGlsZHJlbi5oYXMoY3VycmVudE5hbWUpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5nZXQoY3VycmVudE5hbWUpLnRyaWdnZXIobGV2ZWxOYW1lQXJyYXksIGRhdGEsIF90aGlzLCBfX29yaWdpbmFsTGV2ZWxOYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59Il19
